apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-resource-backend
  # Annotations são basicamente recursos chave/valor e permitem extender o comportamento
  # dos recursos do kubernetes. O ingress do nginx tem várias anotações que podemos configurar.
  annotations:
    # Estou dizendo que o tipo de ingress que estou criando é do tipo nginx
    # Quero trabalhar com meu controlador de ingresso do nginx
    kubernetes.io/ingress.class: nginx
    # Estou dizendo quem vai providenciar os certificados, quem é o cluster issuer.
    certmanager.k8s.io/cluster-issuer: letsencrypt-staging
    # Estou dizendo qual é o tipo que ele precisa resolver para verificar se aquele domínio
    # está válido ou não.
    certmanager.k8s.io/acme-challenge-type: http01
    # Essa configuração é obrigatória. Sem isso, qualquer requisição vai retornar 404.
    # Ela expõe uma url para diferentes serviços do backend de uma pasta específica.
    # Então eu digo que as requisições que vierem para o meu domínio serão encaminhadas para
    # a raiz da minha aplicação. Por isso tem o "/".
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  # Dizemos com quais hosts queremos trabalhar com tls. Esses hosts somente poderão ser acessados
  # por https.
  tls:
    - hosts:
      - backend.jenkins-test.com
      # Estou dizendo que os certificados que serão gerados por esse cluster issuer serão salvos
      # num secret do kubernetes chamado
      secretName: staging-spring-backend
  # Aqui vou escrever minhas regras de ingresso.
  rules:
    # Estou dizendo que toda requisição que for chamada desse endereço
    - host: backend.jenkins-test.com
      http:
        paths:
          # Vai ser encaminhada para o meu diretório raiz
          - path: /
            pathType: Prefix
            backend:
              # E para esse serviço
              service:
                name: spring-svc
                port:
                  number: 8080


#  defaultBackend:
#    resource:
#      apiGroup: k8s.example.com
#      kind: StorageBucket
#      name: static-assets
#  rules:
#    - http:
#        paths:
#          - path: /icons
#            pathType: ImplementationSpecific
#            backend:
#              resource:
#                apiGroup: k8s.example.com
#                kind: StorageBucket
#                name: icon-assets
